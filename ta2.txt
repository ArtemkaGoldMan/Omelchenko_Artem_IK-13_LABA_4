using System;

namespace TA2
{
    

    class Program
    {
        //алгоритм Дейкстри
        static void Deijkstra(int[][] GR, int st)
        {
            int V = GR.GetLength(0);// довжина графа
            int count, index = 0, i, u, m = st+1;
            int[] distance = new int[V];//відстань
            bool[] visited = new bool[V];// відвідані вершини

            for (i = 0; i < V; i++)
            {
                distance[i] = int.MaxValue; // присвоєння всім шляхам до вершини нескінченності
                visited[i] = false;// заносимо в масив дані, що зараз він пустий
            }

            distance[st] = 0; //відстань до початкової вершини завжди буде нулем

            for (count = 0; count < V - 1; count++)
            {
                int min = int.MaxValue;// присвоєння мінімальному шляху нескінченності
                for (i = 0; i < V; i++)// обхід всіх вершин
                    if (!visited[i] && distance[i] <= min) // якщо не відвідували і відстань менша за мінімальну, то це нова мінімальна відстань вузла
                    {
                        min = distance[i]; 
                        index = i;
                    }
                u = index;
                visited[u] = true;// відмічаємо відвідану вершину
                for (i = 0; i < V; i++)
                    if (!visited[i] && GR[u][i] != 0 && distance[u] != int.MaxValue &&
                        distance[u] + GR[u][i] < distance[i])
                        distance[i] = distance[u] + GR[u][i];
            }

            Console.WriteLine("Вiдстанi:\t\n");
            for (i = 0; i < V; i++) if (distance[i] != int.MaxValue)
                    Console.WriteLine("Вiдстань з точки {0} в точку {1} = {2}(в км подiлити на 10)", m, i + 1, distance[i]);
                else
                    Console.WriteLine(@"{0} -> {1} = ""Пройти неможливо", m, i + 1);
        }
        //главная функция
        static void Main(string[] args)
        {


            int[][] GR = new int[11][] 
            {
        new int[] { 0, 20, 0, 9, 0, 0, 46, 0, 13, 0, 0},
        new int[] { 20, 0,6, 13, 0, 0, 0, 0, 7, 13 , 6 },
        new int[] { 0 , 6 , 0, 0, 5, 3, 0 , 0, 5, 9, 0},
        new int[] { 9, 13, 0, 0, 0, 12, 0, 0, 6, 0, 0 },
        new int[] { 0, 0, 5, 0, 0, 0, 0, 11, 7, 0, 0 },
        new int[] { 0, 0, 3, 12, 0, 0, 0, 0, 8, 8, 0 },
        new int[] { 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        new int[] { 0, 0, 0, 0, 11, 0, 0, 0, 0, 20, 0},
        new int[] { 13, 7, 5, 6, 7, 8, 0, 0, 0, 0, 0},
        new int[] { 0, 13, 9, 0, 0, 8, 0, 20, 0, 0, 15},
        new int[] { 0, 6, 0, 0, 0, 0, 0, 0, 15, 0, 0} 
            };

            Console.WriteLine("Мiсце початку подорожi>> ");
            int start = int.Parse(Console.ReadLine());

            Deijkstra(GR, start - 1);
        }
    }
}